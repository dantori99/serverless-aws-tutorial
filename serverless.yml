service: sqs-mock-up

frameworkVersion: '2 || 3'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: ap-northeast-1
  stage: ${opt:stage , 'dev'}
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource:
        Fn::GetAtt:
          - OrdersTable
          - Arn
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - 'Ref': 'OrdersBucket'
            - '/*'
    - Effect: Allow
      Action:
        - SQS:SendMessage
        - SQS:DeleteMessage
        - SQS:GetQueueUrl
        - SQS:ReceiveMessage
      Resource:
        Fn::GetAtt: 
          - OrdersQueue  
          - Arn
  environment:
    orderTableName: ${self:custom.orderTableName}
    ordersBucketName: ${self:custom.ordersBucketName}
    ordersQueue: { Ref: OrdersQueue }

custom:
  orderTableName: orders-table-${self:provider.stage}
  ordersBucketName: sls-tut-arabic-orders-bucket-${self:provider.stage}
  ordersQueue: orders-queue-${self:provider.stage}

functions:
  createUser:
    handler: src/lambdas/order-producer.createUser
    events:
      - http:
          method: POST
          path: /orders/create-user
          cors: true
  orderProducer:
    handler: src/lambdas/order-producer.handler
    events:
      - http:
          method: POST
          path: /orders/create-order
          cors: true
  orderConsumer:
    handler: src/lambdas/order-consumer.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt: 
              - OrdersQueue
              - Arn
          batchSize: 10

resources:
 Resources:
  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: ${self:custom.orderTableName}
  OrdersBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.ordersBucketName}
  OrdersQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ${self:custom.ordersQueue}
   
